{"version":3,"sources":["Person.js","PeopleTable.js","people.js","App.js","index.js"],"names":["Person","_ref","_ref$person","person","id","name","sex","born","died","mother","father","age","century","history","match","location","sexOfPerson","Object","toConsumableArray","toString","bornBefore1650","ageOver65YearsOld","react_default","a","createElement","onClick","push","pathname","concat","toLowerCase","replace","search","className","params","selectedUser","PeopleTable","_useState","useState","_useState2","slicedToArray","people","setPeople","_useState3","_useState4","query","setQuery","useEffect","fetch","then","response","json","peopleFromServer","map","index","objectSpread2","Math","ceil","filteredList","filter","item","Fragment","type","placeholder","value","onChange","event","target","trim","src_Person","key","HomePage","App","react_router_dom","to","exact","activeClassName","react_router","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.05b4bed8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst Person\n  = (\n    { person: { id, name, sex, born, died, mother, father, age, century },\n      history,\n      match,\n      location }\n  ) => {\n    const sexOfPerson = [...sex].toString();\n    const bornBefore1650 = born < 1650;\n    const ageOver65YearsOld = age >= 65;\n\n    const clickHandler = () => {\n      history.push({\n        pathname: `/people/${name.toLowerCase().replace(/ /g, '-')}`,\n        search: location.search,\n      });\n    };\n\n    return (\n      <tr\n        onClick={() => clickHandler()}\n        className={\n          match.params.selectedUser === name\n            .toLowerCase().replace(/ /g, '-') ? 'selected' : ''}\n      >\n        <td>{id}</td>\n        <td className={\n          bornBefore1650\n            ? 'bornBefore1650'\n            : null\n        }\n        >\n          {name}\n        </td>\n        <td className={\n          sexOfPerson === 'm'\n            ? 'person--male'\n            : 'person--female'\n        }\n        >\n          {sex}\n        </td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>{mother}</td>\n        <td>{father}</td>\n        <td className={\n          ageOver65YearsOld\n            ? 'ageOver65YearsOld'\n            : null\n        }\n        >\n          {age}\n        </td>\n        <td className={\n          `person--lived-in-${century}`\n        }\n        >\n          {century}\n        </td>\n      </tr>\n    );\n  };\n\nPerson.propTypes = {\n  person: PropTypes.oneOfType([PropTypes.object])\n    .isRequired,\n  history: PropTypes.shape({}).isRequired,\n  match: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default Person;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\nimport { getPeople } from './people';\n\nconst getPeopleList = peopleArr => (\n  peopleArr.map(\n    (person, index) => ({\n      id: index + 1,\n      ...person,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n    })\n  )\n);\n\nconst PeopleTable = ({ history, location, match }) => {\n  const [people, setPeople] = useState([]);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getPeopleList(peopleFromServer));\n      });\n  }, []);\n\n  const filteredList = people.filter(\n    item => (item.name.toLowerCase()\n      .match(query.toLowerCase()))\n        || ((item.mother !== null)\n          ? (item.mother.toLowerCase()\n            .match(query.toLowerCase()))\n          : 1)\n        || ((item.father !== null)\n          ? (item.father.toLowerCase()\n            .match(query.toLowerCase()))\n          : 1)\n  );\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value.trim().toLowerCase());\n        }}\n      />\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n            <th>Age</th>\n            <th>Century</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredList\n            .filter(item => item.mother && item.father)\n            .map(person => (\n              <Person\n                person={person}\n                history={history}\n                match={match}\n                location={location}\n                key={person.name}\n              />\n            ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nPeopleTable.propTypes = {\n  history: PropTypes.shape({}).isRequired,\n  match: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default PeopleTable;\n","const peopleURL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => fetch(peopleURL)\n  .then(response => response.json());\n","import React from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport './style.css';\nimport PeopleTable from './PeopleTable';\n\nconst App = () => (\n  <div className=\"App\">\n    <Link to=\"/\" exact activeClassName=\"active\" />\n    <Link to=\"/people\" className=\"btn\">\n      PEOPLE\n    </Link>\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/people/:selectedUser?\" component={PeopleTable} />\n    </Switch>\n  </div>\n);\n\nconst HomePage = () => <h1 className=\"home-page\">Home page</h1>;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}