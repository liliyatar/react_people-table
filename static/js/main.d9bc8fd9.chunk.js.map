{"version":3,"sources":["Person.js","PeopleTable.js","people.js","App.js","index.js"],"names":["Person","_ref","_ref$person","person","id","name","sex","born","died","mother","father","age","century","history","match","location","sexOfPerson","Object","toConsumableArray","toString","bornBefore1650","ageOver65YearsOld","react_default","a","createElement","onClick","push","pathname","concat","split","join","toLowerCase","search","className","params","selectedUser","PeopleTable","_useState","useState","_useState2","slicedToArray","people","setPeople","searchParams","URLSearchParams","useEffect","fetch","then","response","json","peopleFromServer","map","index","objectSpread2","Math","ceil","filteredList","get","filter","item","includes","Fragment","lib","type","placeholder","debounceTimeout","onChange","e","_ref2","value","set","trim","delete","setCurrentQuery","target","src_Person","key","HomePage","App","react_router_dom","to","exact","activeClassName","react_router","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d9bc8fd9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst Person\n  = (\n    { person:\n       { id, name, sex, born, died, mother, father, age, century },\n    history, match, location }\n  ) => {\n    const sexOfPerson = [...sex].toString();\n    const bornBefore1650 = born < 1650;\n    const ageOver65YearsOld = age >= 65;\n\n    const clickHandler = () => {\n      history.push({\n        pathname: `/people/${name.split(' ').join('-').toLowerCase()}`,\n        search: location.search,\n      });\n    };\n\n    return (\n      <tr\n        onClick={() => clickHandler()}\n        className={\n          match.params.selectedUser === name\n            .split(' ').join('-').toLowerCase() ? 'selected' : ''}\n      >\n        <td>{id}</td>\n        <td className={\n          bornBefore1650\n            ? 'bornBefore1650'\n            : null\n        }\n        >\n          {name}\n        </td>\n        <td className={\n          sexOfPerson === 'm'\n            ? 'person--male'\n            : 'person--female'\n        }\n        >\n          {sex}\n        </td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>{mother}</td>\n        <td>{father}</td>\n        <td className={\n          ageOver65YearsOld\n            ? 'ageOver65YearsOld'\n            : null\n        }\n        >\n          {age}\n        </td>\n        <td className={\n          `person--lived-in-${century}`\n        }\n        >\n          {century}\n        </td>\n      </tr>\n    );\n  };\n\nPerson.propTypes = {\n  person: PropTypes.oneOfType([PropTypes.object])\n    .isRequired,\n  history: PropTypes.shape({}).isRequired,\n  match: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default Person;\n","import React, { useState, useEffect } from 'react';\nimport { DebounceInput as SearchInput } from 'react-debounce-input';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\nimport { getPeople } from './people';\n\nconst getPeopleList = peopleArr => (\n  peopleArr.map(\n    (person, index) => ({\n      id: index + 1,\n      ...person,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n    })\n  )\n);\n\nconst PeopleTable = ({ history, location, match }) => {\n  const [people, setPeople] = useState([]);\n  const searchParams = new URLSearchParams(location.search);\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getPeopleList(peopleFromServer));\n      });\n  }, []);\n\n  const filteredList = searchParams.get('query')\n    ? (people.filter(\n      item => (item.name.concat(item.mother).concat(item.father))\n        .toLowerCase()\n        .includes((searchParams.get('query')))\n    ))\n    : [...people];\n\n  const setCurrentQuery = ({ value }) => {\n    searchParams.set('query', value.trim().toLowerCase());\n    !value.trim() && searchParams.delete('query');\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  return (\n    <>\n      <SearchInput\n        type=\"text\"\n        placeholder=\"Search\"\n        debounceTimeout={500}\n        onChange={e => setCurrentQuery(e.target)}\n      />\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n            <th>Age</th>\n            <th>Century</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredList\n            .map(person => (\n              <Person\n                person={person}\n                history={history}\n                match={match}\n                location={location}\n                key={person.name}\n              />\n            ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nPeopleTable.propTypes = {\n  history: PropTypes.shape({}).isRequired,\n  match: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default PeopleTable;\n","const peopleURL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => fetch(peopleURL)\n  .then(response => response.json());\n","import React from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport './style.css';\nimport PeopleTable from './PeopleTable';\n\nconst App = () => (\n  <div className=\"App\">\n    <Link to=\"/\" exact activeClassName=\"active\" />\n    <Link to=\"/people\" className=\"btn\">\n      PEOPLE\n    </Link>\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/people/:selectedUser?\" component={PeopleTable} />\n    </Switch>\n  </div>\n);\n\nconst HomePage = () => <h1 className=\"home-page\">Home page</h1>;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}