{"version":3,"sources":["Person.js","PeopleTable.js","people.js","App.js","index.js"],"names":["Person","_ref","_ref$person","person","id","name","sex","born","died","mother","father","age","century","history","match","location","sexOfPerson","Object","toConsumableArray","toString","bornBefore1650","ageOver65YearsOld","react_default","a","createElement","onClick","push","pathname","concat","split","join","toLowerCase","search","className","params","selectedUser","PeopleTable","_useState","useState","_useState2","slicedToArray","people","setPeople","_useState3","_useState4","sortedField","setSortedField","searchParams","URLSearchParams","useEffect","fetch","then","response","json","peopleFromServer","map","index","objectSpread2","Math","ceil","getSortMethod","titleOfColumn","order","b","localeCompare","getSortedData","_ref2","target","peopleList","title","valueOf","textContent","set","sort","get","reverse","preparedListOfPeople","filter","item","includes","Fragment","lib","type","placeholder","debounceTimeout","onChange","e","_ref3","value","trim","delete","setCurrentQuery","src_Person","key","HomePage","react_router_dom","to","App","exact","activeClassName","react_router","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a8210ba6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst Person\n  = (\n    { person:\n       { id, name, sex, born, died, mother, father, age, century },\n    history, match, location }\n  ) => {\n    const sexOfPerson = [...sex].toString();\n    const bornBefore1650 = born < 1650;\n    const ageOver65YearsOld = age >= 65;\n\n    const clickHandler = () => {\n      history.push({\n        pathname: `/people/${name.split(' ').join('-').toLowerCase()}`,\n        search: location.search,\n      });\n    };\n\n    return (\n      <tr\n        onClick={() => clickHandler()}\n        className={\n          match.params.selectedUser === name\n            .split(' ').join('-').toLowerCase() ? 'selected' : ''}\n      >\n        <td>{id}</td>\n        <td className={\n          bornBefore1650\n            ? 'bornBefore1650'\n            : null\n        }\n        >\n          {name}\n        </td>\n        <td className={\n          sexOfPerson === 'm'\n            ? 'person--male'\n            : 'person--female'\n        }\n        >\n          {sex}\n        </td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>{mother}</td>\n        <td>{father}</td>\n        <td className={\n          ageOver65YearsOld\n            ? 'ageOver65YearsOld'\n            : null\n        }\n        >\n          {age}\n        </td>\n        <td className={\n          `person--lived-in-${century}`\n        }\n        >\n          {century}\n        </td>\n      </tr>\n    );\n  };\n\nPerson.propTypes = {\n  person: PropTypes.oneOfType([PropTypes.object])\n    .isRequired,\n  history: PropTypes.shape({}).isRequired,\n  match: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default Person;\n","import React, { useState, useEffect } from 'react';\nimport { DebounceInput as SearchInput } from 'react-debounce-input';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\nimport { getPeople } from './people';\n\nconst getPeopleList = peopleArr => (\n  peopleArr.map(\n    (person, index) => ({\n      id: index + 1,\n      ...person,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n    })\n  )\n);\n\nconst PeopleTable = ({ history, location, match }) => {\n  const [people, setPeople] = useState([]);\n  const [sortedField, setSortedField] = useState('id');\n  const searchParams = new URLSearchParams(location.search);\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getPeopleList(peopleFromServer));\n      });\n  }, []);\n\n  const getSortMethod = (titleOfColumn, order) => {\n    if (titleOfColumn === 'name' || titleOfColumn === 'sex') {\n      if (order === 'asc') {\n        return (a, b) => a[titleOfColumn].localeCompare(b[titleOfColumn]);\n      }\n\n      if (order === 'desc') {\n        return (a, b) => b[titleOfColumn].localeCompare(a[titleOfColumn]);\n      }\n    } else {\n      if (order === 'asc') {\n        return (a, b) => a[titleOfColumn] - b[titleOfColumn];\n      }\n\n      if (order === 'desc') {\n        return (a, b) => b[titleOfColumn] - a[titleOfColumn];\n      }\n    }\n\n    return undefined;\n  };\n\n  const getSortedData = ({ target }) => {\n    const peopleList = people;\n    const title = target.valueOf().textContent.toLowerCase();\n\n    searchParams.set('sortBy', title);\n    history.push({ search: searchParams.toString() });\n\n    if (title !== sortedField) {\n      peopleList\n        .sort(\n          getSortMethod(searchParams.get('query'))\n        );\n      setSortedField(title);\n      searchParams.set('sortOrder', 'asc');\n      history.push({ search: searchParams.toString() });\n    } else {\n      peopleList.reverse();\n      setSortedField('');\n      searchParams.set('sortOrder', 'desc');\n      history.push({ search: searchParams.toString() });\n    }\n  };\n\n  const preparedListOfPeople = searchParams.get('query')\n    ? (people.filter(\n      item => (item.name.concat(item.mother).concat(item.father))\n        .toLowerCase()\n        .includes((searchParams.get('query')))\n    )\n      .sort(\n        getSortMethod(\n          searchParams.get('sortBy'), searchParams.get('sortOrder')\n        )\n      ))\n    : ([...people]\n      .sort(\n        getSortMethod(\n          searchParams.get('sortBy'), searchParams.get('sortOrder')\n        )\n      ));\n\n  const setCurrentQuery = ({ value }) => {\n    searchParams.set('query', value.trim().toLowerCase());\n    if (!value) {\n      searchParams.delete('query');\n    }\n\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  return (\n    <>\n      <SearchInput\n        type=\"text\"\n        placeholder=\"Search\"\n        debounceTimeout={500}\n        onChange={e => setCurrentQuery(e.target)}\n      />\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr>\n            <th onClick={getSortedData}>Id</th>\n            <th onClick={getSortedData}>Name</th>\n            <th onClick={getSortedData}>Sex</th>\n            <th onClick={getSortedData}>Born</th>\n            <th onClick={getSortedData}>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n            <th onClick={getSortedData}>Age</th>\n            <th onClick={getSortedData}>Century</th>\n          </tr>\n        </thead>\n        <tbody>\n          {preparedListOfPeople\n            .map(person => (\n              <Person\n                person={person}\n                history={history}\n                match={match}\n                location={location}\n                key={person.name}\n              />\n            ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nPeopleTable.propTypes = {\n  history: PropTypes.shape({}).isRequired,\n  match: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default PeopleTable;\n","const peopleURL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => fetch(peopleURL)\n  .then(response => response.json());\n","import React from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport './style.css';\nimport PeopleTable from './PeopleTable';\n\nconst App = () => (\n  <div className=\"App\">\n    <Link to=\"/\" exact activeClassName=\"active\" />\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/people/:selectedUser?\" component={PeopleTable} />\n    </Switch>\n  </div>\n);\n\nconst HomePage = () => (\n  <>\n    <Link to=\"/people\" className=\"btn\">\n      PEOPLE\n    </Link>\n    <h1 className=\"home-page\">Home page</h1>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}